name: Prepare Full Offline Installer Assets

on:
  workflow_dispatch:

jobs:
  prepare-assets:
    runs-on: ubuntu-22.04

    steps:
    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y apt-utils gnupg curl dpkg-dev wget software-properties-common

    - name: Add Kubernetes apt repo and key
      run: |
        sudo mkdir -p /etc/apt/keyrings
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg
        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
        sudo apt-get update

    - name: Define packages to download
      run: |
        echo "K8S_PACKAGES='kubeadm kubelet kubectl containerd'" >> $GITHUB_ENV
        echo "UTIL_PACKAGES='wget curl net-tools iproute2 bind9-utils openssh-client openssh-server openssl ca-certificates gnupg lsb-release software-properties-common tar gzip unzip vim nano sudo apt-transport-https dpkg dpkg-dev apt-utils ansible python3 python3-pip python3-apt'" >> $GITHUB_ENV

    - name: Create download folders
      run: |
        mkdir -p debs/k8s debs/os

    - name: Download Kubernetes packages
      run: |
        cd debs/k8s
        for pkg in kubelet kubectl kubeadm containerd; do
          apt-get download $pkg || echo "❗ No se encontró $pkg"
        done

    - name: Download OS and utility packages
      run: |
        cd debs/os
        for pkg in wget curl net-tools iproute2 bind9-utils openssh-client openssh-server openssl \
                    ca-certificates gnupg lsb-release software-properties-common tar gzip unzip \
                    vim nano sudo apt-transport-https dpkg dpkg-dev apt-utils ansible python3 \
                    python3-pip python3-apt; do
          apt-get download $pkg || echo "❗ No se encontró $pkg"
        done


    - name: Create compressed archive
      run: |
        tar -czvf offline_installer_assets.tar.gz -C debs .

    - name: Upload artifact (v4)
      uses: actions/upload-artifact@v4
      with:
        name: offline_installer_assets
        path: offline_installer_assets.tar.gz
