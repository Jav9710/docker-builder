name: Build and Publish Docker Image

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: "Nombre de la imagen Docker (sin el prefijo ghcr.io/)"
        required: true
        default: "mi-imagen"

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Normalize names
        id: normalize
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          IMAGE=$(echo "${{ github.event.inputs.image_name }}" | tr '[:upper:]' '[:lower:]' | tr -cs 'a-z0-9._-' '-')
          echo "owner=$OWNER" >> $GITHUB_OUTPUT
          echo "image=$IMAGE" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        id: build_image
        run: |
          IMAGE_NAME="ghcr.io/${{ steps.normalize.outputs.owner }}/${{ steps.normalize.outputs.image }}"
          docker build -t $IMAGE_NAME:latest .
          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT

      - name: Push image to GHCR
        run: |
          docker push ${{ steps.build_image.outputs.image_name }}:latest

      - name: Export image to tar
        run: |
          docker save ${{ steps.build_image.outputs.image_name }}:latest -o image.tar

      - name: Upload image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.normalize.outputs.image }}-docker-image
          path: image.tar
          retention-days: 7
