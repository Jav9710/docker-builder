name: Build Docker Image from exo

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Etiqueta para la imagen Docker (e.g. exo:latest)'
        required: true
        default: 'exo:latest'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Verificar espacio libre en disco
        run: |
          echo "Espacio disponible en disco antes de construir la imagen:"
          df -h

      - name: Crear Dockerfile dinámico
        run: |
          echo '
            FROM pytorch/pytorch:2.7.0-cuda11.8-cudnn9-runtime
            
            # Configuración básica
            ENV CONDA_DIR /opt/conda
            ENV PATH=$CONDA_DIR/bin:$PATH
            
            # Instalar dependencias del sistema
            RUN apt-get update && apt-get install -y \
                git \
                wget \
                libgl1 \
                libglib2.0-0 \
                build-essential \
                && rm -rf /var/lib/apt/lists/*
            
            # Crear y configurar entorno conda
            RUN conda create -n exo-env python=3.11.10 -y && \
                conda install -n exo-env -c conda-forge gxx_linux-64=11.3.0 -y
            
            # Configurar el shell para usar conda
            SHELL ["conda", "run", "-n", "exo-env", "/bin/bash", "-c"]
            
            # Instalar exo
            WORKDIR /app
            RUN git clone https://github.com/exo-explore/exo.git /app && \
                pip install -e . && \
                pip install opencv-python-headless protobuf==5.27.2 tensorflow==2.19.0
            
            # Limpiar caché para reducir tamaño de imagen
            RUN conda clean -afy && \
                pip cache purge
            
            ENTRYPOINT [ "conda", "run", "--no-capture-output", "-n", "exo-env", "bash" ]
          ' > Dockerfile

      - name: Construir imagen Docker
        run: |
          docker build -t ${{ github.event.inputs.image_tag }} .

      - name: Eliminar imagen base de PyTorch para liberar espacio
        run: |
          docker rmi pytorch/pytorch:2.5.1-cuda12.1-cudnn9-runtime || true

      - name: Mostrar tamaño de la imagen Docker
        run: |
          IMAGE_ID=$(docker images --format="{{.Repository}}:{{.Tag}} {{.ID}}" | grep "${{ github.event.inputs.image_tag }}" | awk '{print $2}')
          IMAGE_SIZE=$(docker image inspect $IMAGE_ID --format='{{.Size}}')
          IMAGE_SIZE_MB=$(echo "scale=2; $IMAGE_SIZE / 1024 / 1024" | bc)
          echo "Tamaño de la imagen: ${IMAGE_SIZE_MB} MB"

      - name: Instalar zstd para compresión agresiva
        run: |
          sudo apt-get update
          sudo apt-get install -y zstd

      - name: Comprimir imagen Docker usando zstd
        run: |
          docker save ${{ github.event.inputs.image_tag }} | zstd -19 -T0 -o exo_image.tar.zst
          ls -lh exo_image.tar.zst

      - name: Subir artifact (imagen Docker comprimida)
        uses: actions/upload-artifact@v4
        with:
          name: exo-docker-image
          path: exo_image.tar.zst
