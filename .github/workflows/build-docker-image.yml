name: Build Docker Image from exo

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Etiqueta para la imagen Docker (e.g. exo:latest)'
        required: true
        default: 'exo:latest'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Crear Dockerfile dinÃ¡mico
        run: |
          echo '
          FROM pytorch/pytorch:2.5.1-cuda12.1-cudnn9-runtime

          WORKDIR /app
          RUN apt-get update && apt-get install -y git libgl1 libgl1-mesa-glx libglib2.0-0 && rm -rf /var/lib/apt/lists/*
          RUN git clone https://github.com/exo-explore/exo.git /app
          WORKDIR /app
          RUN pip install -e .
          RUN pip install opencv-python-headless protobuf==5.27.2 tensorflow==2.19.0

          CMD ["python"]
          ' > Dockerfile

      - name: Construir imagen Docker
        run: |
          docker build -t ${{ github.event.inputs.image_tag }} .

      - name: Exportar imagen Docker como .tar.gz
        run: |
          docker save ${{ github.event.inputs.image_tag }} | gzip > exo_image.tar.gz

      - name: Subir artifact (imagen Docker comprimida)
        uses: actions/upload-artifact@v4
        with:
          name: exo-docker-image
          path: exo_image.tar.gz
